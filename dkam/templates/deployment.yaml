# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
---
{{- $registry := .Values.global.registry -}}
{{ if .Values.image.registry }}
  {{- $registry = .Values.image.registry -}}
{{ end}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dkam.fullname" . }}
  labels:
    {{- include "dkam.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dkam.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dkam.selectorLabels" . | nindent 8 }}
    spec:
       {{- if hasKey $registry "name" }}
       {{- with $registry.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ include "dkam.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: volume-permissions
          image: busybox:1.36.1
          command: ["/bin/sh"]
          args: ["-c", "chmod -R 755 /data && chown 1000:1000 /data"]
          volumeMounts:
          - name: "{{ .Values.pvc.name }}"
            mountPath: "{{ .Values.pvc.mountPath }}"
          securityContext:
             {{- toYaml .Values.volumeSecurityContext | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if hasKey $registry "name" }}
          image: "{{ $registry.name }}{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- range $key, $value := .Values.managerArgs }}
            - {{ print "-" $key | toYaml -}}={{- $value }}
            {{- end }}
            {{- if .Values.metrics.enabled }}
            - -enableMetrics=true
            {{- end }}
            - -configFile=/etc/infra-config/config.yaml
          ports:
            - name: grpc
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
            {{- end }}
          env:
          - name: MODE
            value: "{{ .Values.env.mode }}"
          - name: RS_PROFILE_SCRIPTS_REPO
            value: "{{ .Values.env.profileScriptRepo }}"
          - name: http_proxy
            value: "{{ .Values.proxies.http_proxy }}"
          - name: https_proxy
            value: "{{ .Values.proxies.https_proxy }}"
          - name: no_proxy
            value: "{{ .Values.proxies.no_proxy }}"
          - name: OIDC_SERVER_URL
            value: "{{ .Values.env.oidc.oidc_server_url }}"
          - name: OIDC_TLS_INSECURE_SKIP_VERIFY
            value: "{{ .Values.env.oidc.oidc_tls_insecure_skip_verify_value }}"
          - name: ALLOW_MISSING_AUTH_CLIENTS
            value: {{ join "," .Values.env.oidc.clients.bypass | default "" }}
          - name: RSPROXY_ADDRESS
            value: "{{ .Values.env.rs_proxy_address }}"
          volumeMounts:
          - name: "{{ .Values.pvc.name }}"
            mountPath: "{{ .Values.pvc.mountPath }}"
          - name: boots-ca-cert
            mountPath: "/etc/ssl/boots-ca-cert"
            readOnly: true
          - name: orch-ca-cert
            mountPath: "/etc/ssl/orch-ca-cert"
            readOnly: true
          - name: "download-path"
            mountPath: /tmp
          - name: infra-config-volume
            mountPath: "/etc/infra-config"
            readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: infra-config-volume
        configMap:
          name: infra-config
      - name: "{{ .Values.pvc.name }}"
        persistentVolumeClaim:
          claimName: "{{ .Values.pvc.claimName }}"
      - name: boots-ca-cert
        secret:
          secretName: {{ .Values.certs.secretNameBootsCert }}
          optional: true
      - name: orch-ca-cert
        secret:
          secretName: {{ .Values.certs.secretNameOrchCaCert }}
          optional: true
      - name: download-path
        emptyDir: { }
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
